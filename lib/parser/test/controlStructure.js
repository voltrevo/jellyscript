'use strict';

// TODO: `for {}` and `if (true) {} else if (true) {} else {}` untested

var controlStructure = require('../controlStructure.js');
var generator = require('./generator.js');

generator('controlStructure', controlStructure, {
  valid: [
    ['if (foo) {}'],
    ['for(foo) { 0; }'],
    ['if (foo) { 0; 0; }'],
    ['for (foo) {0;0;0;0;}'],
    ['if (foo){ \'foo\'; }'],
    ['for (foo) { 1 + 1; }'],
    ['if(foo){ x++; }'],
    ['for (foo) { 1++; }'],
    ['if (foo) { x++ + 1; }'],
    ['for (foo) { ++x++; --3; }'],
    ['if (foo) { --3; }'],
    ['for (foo) { ---x; }'],
    ['if (foo) { ---3; }'],
    ['for    (foo)    { -- -x; }'],
    ['if (foo) { -a + b; }'],
    ['for (foo) { - - - - -x; }'],
    ['if (foo) { x++ ++; }'],
    ['for (foo) { -- --x; }'],
    ['if (foo) { a.b; a.b++; }'],
    ['for (foo) { a.b++; }'],
    ['if (foo) { a = b; }'],
    ['for (foo) { a ~ b; }'],
    ['if (foo) { a.b = c; }'],
    ['for (foo) {foo ~ bar; foo ~ bar; foo~bar; }'],
    ['if (foo) { foo~bar; }'],
    ['for (foo) { foo~bar++;}'],
    ['if (foo) {foo~++bar++; }'],
    ['for (foo) { a = b = c = d;}'],
    ['if (foo) { a.b = b.c = c.d; return a+b+c  ; }'],
    ['for (foo) {return17;}'],
    ['for (foo)  {}']
  ],
  invalid: [
    [''],
    ['if (foo) '],
    ['for (foo) {}}'],
    ['if (foo) {{}'],
    ['for (foo) {{}}'],
    ['if (foo) {{{{}}}}'],
    ['for (foo) {{return 3;}}'],
    ['if (foo) {1 + 1; {1 + 1;} 1 + 1;}'],
    ['if (foo) {} '],
    ['for (foo) { return 17; } '],
    ['if (foo) {return 17}'],
    ['for (foo) { =>}'],
    ['if (foo) {=>}'],
    ['for (foo) {=> }'],
    ['if (foo) {==>}'],
    ['for (foo) { true}'],
    ['if (foo) { true }'],
    ['for (foo) {false }'],
    ['if (foo) {&}'],
    ['for (foo) {1one}'],
    ['if (foo) { foo}'],
    ['for (foo) {7u}'],
    ['if (foo) { 1}'],
    ['for (foo) {1 }'],
    ['if (foo) {3-}'],
    ['for (foo) {1e1.1}'],
    ['if (foo) {"}'],
    ['for (foo) {"""}'],
    ['if (foo) {(\')}'],
    ['for (foo) {(1one)}'],
    ['if (foo) {(,)}'],
    ['for (foo) {(foo,)}'],
    ['if (foo) {(,foo)}'],
    ['for (foo) { ()}'],
    ['if (foo) {() }'],
    ['for (foo) {|}'],
    ['if (foo) {**}'],
    ['for (foo) {===}'],
    ['if (foo) {!==}'],
    [' if (foo) {}'],
    ['if (foo) {} '],
    ['if foo) {}'],
    ['if (foo {}'],
    ['if (foo) x++;']
  ]
});
